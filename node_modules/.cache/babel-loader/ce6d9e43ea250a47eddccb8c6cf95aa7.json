{"ast":null,"code":"import axios from 'axios';\nimport { getStateValue } from '../root/localStorage'; //import { put } from 'redux-saga/effects';\n// import { logout } from '../shells/TopBar/actions';\n\nexport default function* api(action) {\n  const x = getStateValue('user') || null;\n  const baseUrl = 'https://api.github.com/users';\n\n  try {\n    const response = yield axios({\n      method: 'get',\n      url: baseUrl + action.handler //data: action.payload || null,\n      //params: action.query || null,\n\n    });\n    return response;\n  } catch (error) {\n    if (error && error.response) {\n      if (error.response.status === 401) {//yield put({ type: 'USER_LOGOUT' });\n      } else if (error.response.status === 400) {\n        return error.response;\n      }\n    } // returning dummy data to ensure the calling saga doesnt get stuck\n\n\n    return {\n      data: {\n        data: null\n      },\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/cepl/Desktop/novapay/bnb/src/utils/api.js"],"names":["axios","getStateValue","api","action","x","baseUrl","response","method","url","handler","error","status","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B,C,CACA;AACA;;AAEA,eAAe,UAAUC,GAAV,CAAcC,MAAd,EAAsB;AACnC,QAAMC,CAAC,GAAGH,aAAa,CAAC,MAAD,CAAb,IAAyB,IAAnC;AAEA,QAAMI,OAAO,GAAG,8BAAhB;;AAIA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC;AAC3BO,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,GAAG,EAAEH,OAAO,GAAEF,MAAM,CAACM,OAFM,CAG3B;AACA;;AAJ2B,KAAD,CAA5B;AAOA,WAAOH,QAAP;AACD,GATD,CASE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,IAAIA,KAAK,CAACJ,QAAnB,EAA6B;AAC3B,UAAII,KAAK,CAACJ,QAAN,CAAeK,MAAf,KAA0B,GAA9B,EAAmC,CACjC;AACD,OAFD,MAEO,IAAID,KAAK,CAACJ,QAAN,CAAeK,MAAf,KAA0B,GAA9B,EAAmC;AACxC,eAAOD,KAAK,CAACJ,QAAb;AACD;AACF,KAPa,CASd;;;AACA,WAAO;AAAEM,MAAAA,IAAI,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAR;AAAwBF,MAAAA;AAAxB,KAAP;AACD;AACF","sourcesContent":["import axios from 'axios';\nimport { getStateValue } from '../root/localStorage';\n//import { put } from 'redux-saga/effects';\n// import { logout } from '../shells/TopBar/actions';\n\nexport default function* api(action) {\n  const x = getStateValue('user') || null;\n  \n  const baseUrl = 'https://api.github.com/users';\n  \n\n\n  try {\n    const response = yield axios({\n      method: 'get',\n      url: baseUrl +action.handler,\n      //data: action.payload || null,\n      //params: action.query || null,\n    });\n\n    return response;\n  } catch (error) {\n    if (error && error.response) {\n      if (error.response.status === 401) {\n        //yield put({ type: 'USER_LOGOUT' });\n      } else if (error.response.status === 400) {\n        return error.response;\n      }\n    }\n  \n    // returning dummy data to ensure the calling saga doesnt get stuck\n    return { data: { data: null }, error };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}