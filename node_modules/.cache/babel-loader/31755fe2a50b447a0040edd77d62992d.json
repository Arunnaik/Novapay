{"ast":null,"code":"export function home(state = {}, action) {\n  switch (action.type) {\n    case 'HOTEL_DATA':\n      {\n        const results = action.results;\n        return Object.assign({}, state, {\n          hotelList: results\n        });\n      }\n\n    case 'START_DATE':\n      {\n        const startDate = action.startDate;\n        return Object.assign({}, state, {\n          startDate\n        });\n      }\n\n    case 'END_DATE':\n      {\n        const endDate = action.endDate;\n        return Object.assign({}, state, {\n          endDate\n        });\n      }\n\n    case 'FILTERED_HOTELS':\n      {\n        const filterdList = state.hotelList.hotels.filter(items => {\n          return items.availability.filter(dates => {\n            const splitedFrom = dates.from.split('-');\n            const splitedTo = dates.to.split('-');\n            const isofroDate = \"\".concat(splitedFrom[2], \"-\").concat(splitedFrom[1], \"-\").concat(splitedFrom[0]);\n            const isoToDate = \"\".concat(splitedTo[2], \"-\").concat(splitedTo[1], \"-\").concat(splitedTo[0]);\n            console.log(new Date(isoToDate).getTime());\n            return new Date(isofroDate).getTime() >= state.startDate && new Date(isoToDate).getTime() <= state.endDate;\n          }).length > 0;\n        });\n        return Object.assign({}, state, {\n          filterdList\n        });\n      }\n\n    case 'SORTED':\n      {\n        const items = action.items;\n\n        if (items === 'price') {\n          state.hotelList.hotels.sort((a, b) => a.price - b.price);\n        }\n\n        if (items === 'name') {\n          state.hotelList.hotels.sort((a, b) => a.name > b.name ? 1 : -1);\n        }\n\n        return Object.assign({}, state);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/cepl/Desktop/novapay/bnb/src/shell/Home/reducers.js"],"names":["home","state","action","type","results","Object","assign","hotelList","startDate","endDate","filterdList","hotels","filter","items","availability","dates","splitedFrom","from","split","splitedTo","to","isofroDate","isoToDate","console","log","Date","getTime","length","sort","a","b","price","name"],"mappings":"AAAA,OAAO,SAASA,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAAmB;AAAA,cACTC,OADS,GACGF,MADH,CACTE,OADS;AAEjB,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEM,UAAAA,SAAS,EAACH;AAAZ,SAAzB,CAAP;AACD;;AACD,SAAK,YAAL;AAAkB;AAAA,cACTI,SADS,GACGN,MADH,CACTM,SADS;AAEhB,eAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEO,UAAAA;AAAF,SAAzB,CAAP;AACD;;AACD,SAAK,UAAL;AAAgB;AAAA,cACPC,OADO,GACGP,MADH,CACPO,OADO;AAEd,eAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEQ,UAAAA;AAAF,SAAzB,CAAP;AACD;;AACF,SAAK,iBAAL;AAAuB;AACrB,cAAMC,WAAW,GAAGT,KAAK,CAACM,SAAN,CAAgBI,MAAhB,CAAuBC,MAAvB,CAA+BC,KAAD,IAAS;AAC1D,iBAASA,KAAK,CAACC,YAAN,CAAmBF,MAAnB,CAA2BG,KAAD,IAAS;AACzC,kBAAMC,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiB,GAAjB,CAApB;AAED,kBAAMC,SAAS,GAAGJ,KAAK,CAACK,EAAN,CAASF,KAAT,CAAe,GAAf,CAAlB;AACA,kBAAMG,UAAU,aAAKL,WAAW,CAAC,CAAD,CAAhB,cAAuBA,WAAW,CAAC,CAAD,CAAlC,cAAyCA,WAAW,CAAC,CAAD,CAApD,CAAhB;AACA,kBAAMM,SAAS,aAAKH,SAAS,CAAC,CAAD,CAAd,cAAqBA,SAAS,CAAC,CAAD,CAA9B,cAAqCA,SAAS,CAAC,CAAD,CAA9C,CAAf;AAEDI,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASH,SAAT,EAAoBI,OAApB,EAAZ;AACA,mBAAO,IAAID,IAAJ,CAASJ,UAAT,EAAqBK,OAArB,MAAgCzB,KAAK,CAACO,SAAtC,IAAiD,IAAIiB,IAAJ,CAASH,SAAT,EAAoBI,OAApB,MAA+BzB,KAAK,CAACQ,OAA7F;AACE,WATM,EASJkB,MATI,GASG,CATZ;AAUC,SAXkB,CAApB;AAYA,eAAOtB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAES,UAAAA;AAAF,SAAzB,CAAP;AAED;;AACD,SAAK,QAAL;AAAc;AAAA,cACLG,KADK,GACGX,MADH,CACLW,KADK;;AAEZ,YAAGA,KAAK,KAAG,OAAX,EAAmB;AACjBZ,UAAAA,KAAK,CAACM,SAAN,CAAgBI,MAAhB,CAAuBiB,IAAvB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACE,KAAF,GAAQD,CAAC,CAACC,KAA7C;AACD;;AACD,YAAGlB,KAAK,KAAG,MAAX,EAAkB;AACjBZ,UAAAA,KAAK,CAACM,SAAN,CAAgBI,MAAhB,CAAuBiB,IAAvB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAAQD,CAAC,CAACG,IAAF,GAAOF,CAAC,CAACE,IAAV,GAAgB,CAAhB,GAAkB,CAAC,CAAtD;AACD;;AACA,eAAO3B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAP;AAED;;AACA;AACE,aAAOA,KAAP;AAzCJ;AA2CD","sourcesContent":["export function home(state = {}, action) {\n    switch (action.type) {\n      case 'HOTEL_DATA': {\n        const { results } = action;\n        return Object.assign({}, state, { hotelList:results });\n      }\n      case 'START_DATE':{\n        const {startDate} =action;\n        return Object.assign({}, state, { startDate });\n      }\n      case 'END_DATE':{\n        const {endDate} =action;\n        return Object.assign({}, state, { endDate });\n      }\n     case 'FILTERED_HOTELS':{\n       const filterdList = state.hotelList.hotels.filter((items)=>{\n        return   items.availability.filter((dates)=>{\n           const splitedFrom = dates.from.split('-');\n    \n          const splitedTo = dates.to.split('-');\n          const isofroDate= `${splitedFrom[2]}-${splitedFrom[1]}-${splitedFrom[0]}`;\n          const isoToDate =`${splitedTo[2]}-${splitedTo[1]}-${splitedTo[0]}`;\n    \n         console.log(new Date(isoToDate).getTime())\n         return new Date(isofroDate).getTime()>=state.startDate&&new Date(isoToDate).getTime()<=state.endDate\n          }).length>0\n        })\n       return Object.assign({}, state, { filterdList });\n\n     }\n     case 'SORTED':{\n       const {items} =action;\n       if(items==='price'){\n         state.hotelList.hotels.sort((a,b)=>a.price-b.price);\n       }\n       if(items==='name'){\n        state.hotelList.hotels.sort((a,b)=>(a.name>b.name)?1:-1);\n      }\n       return Object.assign({}, state);\n\n     }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}